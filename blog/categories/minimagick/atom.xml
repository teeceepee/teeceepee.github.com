<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: MiniMagick | Why Y]]></title>
  <link href="http://teeceepee.github.com/blog/categories/minimagick/atom.xml" rel="self"/>
  <link href="http://teeceepee.github.com/"/>
  <updated>2015-09-23T22:14:49+08:00</updated>
  <id>http://teeceepee.github.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[设置 MiniMagick 查找命令的路径]]></title>
    <link href="http://teeceepee.github.com/blog/2015/09/23/set-minimagick-command-path/"/>
    <updated>2015-09-23T21:21:00+08:00</updated>
    <id>http://teeceepee.github.com/blog/2015/09/23/set-minimagick-command-path</id>
    <content type="html"><![CDATA[<p>MiniMagick 是 Ruby 中常用的图片处理库，它是基于 ImageMagick 这个跨平台图片处理库实现的。比较特别的是，MiniMagick 是通过调用 ImageMagick 提供的一系列命令来实现图片处理功能的，也就是只要操作系统中有对应的 ImageMagick 命令，比如 <code>identity</code>，<code>convert</code> ，MiniMagick 就能正常工作。</p>

<p>只要涉及到命令调用，就一定会有命令查找路径的问题。MiniMagick 默认只使用命令名来调用命令，也就是从环境变量的 PATH 中查找。这一般没有问题，但如果 ImageMagick 的可执行程序没有安装在默认的 PATH 中，那么可以通过 <code>MiniMagick.cli_path=</code> 这个方法来指定命令查找的路径。例如在 Rails 中，可以创建一个 <code>config/initializers/mini_magick.rb</code> 初始化文件，写入如下内容：</p>

<p>``` ruby</p>

<h1>config/initializers/mini_magick.rb</h1>

<p>MiniMagick.configure do |config|
  # 如果不能正常调用 ImageMagick 的命令，则使用指定的路径。
  begin</p>

<pre><code># 返回命令 `identify -version` 输出，如果查找不到命令则会抛出异常。
MiniMagick.cli_version
</code></pre>

<p>  rescue</p>

<pre><code>config.cli_path= '/root/.linuxbrew/bin'
</code></pre>

<p>  end
end</p>

<p>```</p>

<p>上面的初始化文件首先尝试调用 ImageMagick 的命令，如果调用失败则使用指定的路径查找命令。</p>
]]></content>
  </entry>
  
</feed>
