<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OSX | Why Y]]></title>
  <link href="http://teeceepee.github.com/blog/categories/osx/atom.xml" rel="self"/>
  <link href="http://teeceepee.github.com/"/>
  <updated>2015-01-26T23:04:45+08:00</updated>
  <id>http://teeceepee.github.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OSX 中挂载 NTFS 分区]]></title>
    <link href="http://teeceepee.github.com/blog/2015/01/26/mount-ntfs-partition-as-writable-in-osx/"/>
    <updated>2015-01-26T22:29:00+08:00</updated>
    <id>http://teeceepee.github.com/blog/2015/01/26/mount-ntfs-partition-as-writable-in-osx</id>
    <content type="html"><![CDATA[<p>我的移动硬盘是在用 Mac 之前买的，格式化为 NTFS 格式，可以在 Windows 和 Linux 中正常使用。换用 Mac 后，一开始只是从移动硬盘中读文件，没发觉有什么问题，一度以为网上说的 OSX 不支持 NTFS 的说法是针对老版本。直到又一次想要向移动硬盘中存文件，发现连新建目录都不行，这才了解到 OSX 默认把 NTFS 分区挂载为只读。</p>

<p>原来 OSX 从 Snow Leopard 开始就内置了对 NTFS 分区的读写支持，但是默认将 NTFS 分区挂载为只读分区，具体原因不详。既然是内置读写支持，那就有办法将 NTFS 分区挂载为可读可写的分区。</p>

<p>实现这个功能的命令是 <code>/sbin/mount_ntfs</code>，系统在实现移动硬盘自动挂载功能时也是间接使用该命令，所以网上有修改该文件来实现自动挂载为可读可写分区的方法。个人觉得修改系统原文件不是一个很好的方法，没有采用。不过也学到了使用该命令的方法。</p>

<p><code>bash
mount_ntfs -o rw,nobrowse DEVICE MOUNT_POINT
</code></p>

<p>其中 <code>DEVICE</code> 是硬盘分区对应的设备文件， 比如 <code>/dev/disk2s1</code>，<code>MOUNT_POINT</code> 是挂载点，比如 <code>/Volumes/data</code>。通过 <code>-o rw,nobrowse</code> 这样的参数，可以将 NTFS 分区挂载为可读可写分区，其中的 <code>rw</code> 顾名思义，<code>nobrowse</code> 表示不在桌面和 Finder 中显示。不在桌面和 Finder 中显示很不方便，于是尝试只是用 <code>-o rw</code> 这样的参数，挂载的分区出现在了桌面和 Finder中，但是依然是只读分区，尝试失败。可能是系统做了限制，挂载为可读可写分区时不允许在桌面和 Finder 中显示。目前我的做法是将 <code>/Volumes</code> 目录放到 Finder 的个人收藏中，然后手动挂载分区到这个目录下的某个子目录。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Emacs on OSX]]></title>
    <link href="http://teeceepee.github.com/blog/2014/12/06/install-emacs-on-osx/"/>
    <updated>2014-12-06T16:24:00+08:00</updated>
    <id>http://teeceepee.github.com/blog/2014/12/06/install-emacs-on-osx</id>
    <content type="html"><![CDATA[<p>原来在 Linux 和 Windows 系统都是用 Emacs，换了 MacBook Pro 后就考虑如何在 OSX 上安装 Emacs。其实 OSX 默认就安装了 Emacs，只不过版本太老，还是22的，而且貌似没有图形界面，所以还是需要安装新版本的有图形界面的Emacs。OSX 上貌似有好几种 Emacs，因为我使用 Homebrew 管理软件包，所以选择了用 Homebrew 安装 Emacs。在这里记录一下安装配置时遇到的问题。</p>

<h2>使用 Homebrew 安装 Emacs</h2>

<p>Homebrew 有 Emacs 的 formula，那就像其他软件一样安装吧。</p>

<p><code>bash
 # Do not use this command, it does not work well!
brew install emacs
</code></p>

<p>通过命令行的输出可以看到 Homebrew 默认选择 bottle 的方式安装 Emacs，bottle 方式就是直接下载已经编译好的软件包。一会儿安装完成，赶紧在命令行输入 <code>emacs --version</code>，确认是版本是新的，以为大功告成了。但是找了半天没找到怎么启动图形界面的 Emacs，遂上网查找问题。查找的结果是用上面的命令安装的 Emacs 只能在终端使用，根本就没有图形界面。想用图形界面，只能用编译的方式安装 Emacs。命令如下：</p>

<p><code>bash
brew install emacs --cocoa
</code></p>

<p>这样就会编译 Cocoa 版本的 Emacs，也就是有图形界面的。在写这篇文章时，Homebrew 中的 Emacs 版本为 24.4，安装这个版本不需要再加 <code>--srgb</code> 选项，貌似已经是默认行为，不需要写在命令中了。网上查到的资料大多都有 <code>--srgb</code> 选项，是24.4版本之前需要的选项，现在已经不需要了。</p>

<p>安装完后仍然是不能直接启动图形界面的，需要做一个符号链接。</p>

<p><code>bash
ln -s /usr/local/Cellar/emacs/24.4/Emacs.app /Applications/Emacs.app
</code></p>

<p>需要注意链接的路径，如果修改了 Homebrew 的安装路径，需要修改成对应的。到此，终于大功告成了。</p>

<h2>修改 Emacs 修饰键</h2>

<p>MacBook Pro 的键盘有一点让我非常不习惯，Control 键竟然只有一个！Command、Option、Shift 键都有两个，Control 键竟然只在左边有，右边的位置被方向键霸占了。OSX 的快捷键大多以 Command 开头，影响不大，但是 Emacs 可是大量使用 Control 键啊。原来的解决方案是使用外接键盘，现在不用外接键盘了，只能考虑其他方式了。用 Command 代替 Control 的功能是个不错的方法，经过上网查找，找到了几个 Emacs 的变量，可以实现该功能，只需添加下面的代码到配置文件即可。</p>

<p>``` cl
(if (eq system-type 'darwin)</p>

<pre><code>(progn
  ;(setq mac-control-modifier 'super)
  (setq mac-command-modifier 'control)))
</code></pre>

<p>```</p>

<p><code>system-type</code> 变量表示当前系统类型，<code>darwin</code> 表示 OSX，<code>mac-command-modifier</code> 变量表示按下 Command 键输入哪个前缀。注释掉的那一行表示，用 Control 键实现原来 Command 键的功能，因为发生过误操作，所以注释不用了。</p>

<h2>总结</h2>

<p>这篇文章介绍了如何用 Homebrew 安装有图形界面的 Emacs，安装版本为24.4。原来安装过24.3版本的，有一个非常严重的BUG，一旦触发用 x-popup-dialog 打开的对话框，整个 Emacs 就没有响应了，只能通过系统的强制退出功能关掉程序。这其中就包括 <code>cmd + p</code> 这样的组合键，有时想按 <code>ctrl +p</code>，结果按成了 <code>cmd + p</code>，弹出和打印有关的对话框，然后整个 Emacs 就没有响应了，这也是更改 Command 键的功能的部分原因。现在重新安装了24.4，BUG没有了，使用起来更顺畅了。</p>

<h2>参考</h2>

<p><a href="http://emacsredux.com/blog/2014/01/11/a-peek-at-emacs-24-dot-4-srgb-colours-on-os-x/">http://emacsredux.com/blog/2014/01/11/a-peek-at-emacs-24-dot-4-srgb-colours-on-os-x/</a></p>

<p><a href="http://stackoverflow.com/questions/1817257/how-to-determine-operating-system-in-elisp">http://stackoverflow.com/questions/1817257/how-to-determine-operating-system-in-elisp</a></p>
]]></content>
  </entry>
  
</feed>
